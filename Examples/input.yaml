# This is an example input file for a sequential ORCA workflow.
# Replace <your_template_directory>, <your_scratch_directory>, and <your_output_directory>
template_dir: <your_template_directory>
scratch_dir: <your_scratch_directory>
output_dir: <your_output_directory>
orca_executable: <your_orca_executable_path>
# Sequential ORCA Input Configuration File
# Define each step with its specific parameters.
#This workflow reflects using GOAT and refining methods to improve the accuracy
charge: 0
multiplicity: 1 

# Optional: Override default initial structure (default is /template_dir/step1.xyz)
initial_xyz: ./templates/step1.xyz

steps:
  # Step 1: Example using GOAT with None sampling (it's the only option for GOAT)
  - step: 1
    operation: "GOAT"           # Options: GOAT, DOCKER, PES, SOLVATOR, 
    engine: "DFT"       # Options: DFT, MLFF
    sample_type:
      method: "integer"              # Options: E_window, Boltzmann_distribution, integer
      parameters: 
        num_structures: 0                   #The 0 option returns all of the values      
        
  # Step 2: Example using MLFF with Boltzmann distribution sampling
  - step: 2
    operation: "OPT+SP"
    engine: "DFT"
    sample_type:
      method: "boltzmann"
      parameters:
        weight: 99.99

  # Step 3: Using DFT to refine the calculation
  - step: 3
    operation: "OPT+SP"
    engine: "MLFF"       
    mlff:                           #MLFF specific parameters
      model_name: "uma-s-1"         #FAIRCHEM models are UMA family of models, and eSEn family of models, for MACE use small, medium, large
      task_name: "omol"             #Task name corresponds to the training used for the foundation models. 
      device: "cuda"                #Options are "cpu" or "cuda", CUDA is highly recommended if you have a compatible GPU
    sample_type:
      method: "integer"
      parameters:
       num_structures: 15 
      method: "energy_window"  
      parameters:
        energy: 1  #This energy is in Hartrees.
        unit: kcal/mol  #Options are (kcal/mol / hartree. Default is Hartree)

  # Step 4: Using a high-precision DFT to finalize the calculations on the best energy. 
  - step: 4
    calculation_type: "DFT"
    sample_type:
      method: "integer"
      parameters: 
        num_structures: 0 
  
  # Step 5: Optional - Remove imaginary frequencies. 
  - step: 5
    operation: "OPT+SP"
    engine: "DFT"
    normal_mode_sampling: True
    normal_mode_sampling_parameters:
      calc_type: "rm_imag"   # Two options for this [rm_imag, random]
      displacement_vector: 1.0
    sample_type:
      method: "integer"  
      parameters:
       num_structures: 0  #This energy is in Hartrees.      

#You can add as many parameters are you wish. 
